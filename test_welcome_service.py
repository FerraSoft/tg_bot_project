#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—ã –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
"""

import pytest
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from services.welcome_service import WelcomeService
from core.permissions import UserRole


class TestWelcomeService:
    """–¢–µ—Å—Ç—ã WelcomeService"""

    def setup_method(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ç–µ—Å—Ç–æ–º"""
        self.welcome_service = WelcomeService()

    def test_initialization(self):
        """–¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–∞"""
        assert self.welcome_service is not None
        assert hasattr(self.welcome_service, 'welcome_messages')
        assert isinstance(self.welcome_service.welcome_messages, dict)

    def test_get_welcome_message_user(self):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        message = self.welcome_service.get_welcome_message(UserRole.USER, "–¢–µ—Å—Ç")
        assert "üëã –ü—Ä–∏–≤–µ—Ç, –¢–µ—Å—Ç!" in message
        assert "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å" in message  # –ò–∑–º–µ–Ω–µ–Ω–æ: —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º emoji –∏–∑ —Å–µ—Ä–≤–∏—Å–∞
        assert "/rank" in message
        assert "/leaderboard" in message

    def test_get_welcome_message_moderator(self):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"""
        message = self.welcome_service.get_welcome_message(UserRole.MODERATOR, "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä")
        assert "üëã –ü—Ä–∏–≤–µ—Ç, –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä!" in message
        assert "üõ°Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –º–æ–¥–µ—Ä–∞—Ç–æ—Ä!" in message
        assert "/warn" in message
        assert "/mute" in message
        assert "/unmute" in message

    def test_get_welcome_message_admin(self):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        message = self.welcome_service.get_welcome_message(UserRole.ADMIN, "–ê–¥–º–∏–Ω")
        assert "üëã –ü—Ä–∏–≤–µ—Ç, –ê–¥–º–∏–Ω!" in message
        assert "üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!" in message
        assert "/ban" in message
        assert "/kick" in message
        assert "/admin_stats" in message

    def test_get_welcome_message_super_admin(self):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        message = self.welcome_service.get_welcome_message(UserRole.SUPER_ADMIN, "–°—É–ø–µ—Ä–ê–¥–º–∏–Ω")
        assert "üëã –ü—Ä–∏–≤–µ—Ç, –°—É–ø–µ—Ä–ê–¥–º–∏–Ω!" in message
        assert "üîß –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!" in message
        # –ö–æ–º–∞–Ω–¥—ã —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã, –ø—Ä–æ–≤–µ—Ä–∏–º –æ–±—â–µ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
        assert "/warn" in message
        assert "/admin_stats" in message

    def test_get_welcome_message_without_name(self):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –±–µ–∑ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        message = self.welcome_service.get_welcome_message(UserRole.USER)
        assert "üëã –ü—Ä–∏–≤–µ—Ç!" in message
        assert "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å" in message  # –ò–∑–º–µ–Ω–µ–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º emoji –∏–∑ —Å–µ—Ä–≤–∏—Å–∞

    def test_invalid_role(self):
        """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–æ–ª–∏"""
        with pytest.raises(Exception):  # ValidationError
            self.welcome_service.get_welcome_message("invalid_role")

    def test_get_available_commands_user(self):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        commands = self.welcome_service.get_available_commands_for_role(UserRole.USER)

        assert 'user_commands' in commands
        assert 'games' in commands
        assert 'moderation' not in commands
        assert 'admin' not in commands
        assert 'super_admin' not in commands

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
        user_commands = commands['user_commands']
        assert len(user_commands) > 0
        assert any('/start' in cmd for cmd in user_commands)
        assert any('/help' in cmd for cmd in user_commands)

    def test_get_available_commands_moderator(self):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"""
        commands = self.welcome_service.get_available_commands_for_role(UserRole.MODERATOR)

        assert 'user_commands' in commands
        assert 'games' in commands
        assert 'moderation' in commands
        assert 'admin' not in commands

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏
        moderation_commands = commands['moderation']
        assert len(moderation_commands) > 0
        assert any('/warn' in cmd for cmd in moderation_commands)

    def test_get_available_commands_admin(self):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        commands = self.welcome_service.get_available_commands_for_role(UserRole.ADMIN)

        assert 'user_commands' in commands
        assert 'games' in commands
        assert 'moderation' in commands
        assert 'admin' in commands
        assert 'super_admin' not in commands

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
        admin_commands = commands['admin']
        assert len(admin_commands) > 0
        assert any('/ban' in cmd for cmd in admin_commands)

    def test_get_available_commands_super_admin(self):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        commands = self.welcome_service.get_available_commands_for_role(UserRole.SUPER_ADMIN)

        assert 'user_commands' in commands
        assert 'games' in commands
        assert 'moderation' in commands
        assert 'admin' in commands
        assert 'super_admin' in commands

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
        super_admin_commands = commands['super_admin']
        assert len(super_admin_commands) > 0
        assert any('/admin_system' in cmd for cmd in super_admin_commands)

    def test_validate_user_name_valid(self):
        """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∏–º–µ–Ω–∏"""
        assert self.welcome_service.validate_user_name("–¢–µ—Å—Ç–æ–≤–æ–µ–ò–º—è") == True
        assert self.welcome_service.validate_user_name("Test Name") == True
        assert self.welcome_service.validate_user_name("–ò–º—è123") == True

    def test_validate_user_name_invalid(self):
        """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∏–º–µ–Ω–∏"""
        assert self.welcome_service.validate_user_name("") == False
        assert self.welcome_service.validate_user_name(None) == False
        assert self.welcome_service.validate_user_name("A" * 101) == False  # –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
        assert self.welcome_service.validate_user_name("<script>") == False  # –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã

    def test_all_roles_have_messages(self):
        """–¢–µ—Å—Ç, —á—Ç–æ –¥–ª—è –≤—Å–µ—Ö —Ä–æ–ª–µ–π –µ—Å—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        for role in UserRole:
            message = self.welcome_service.get_welcome_message(role)
            assert message is not None
            assert len(message.strip()) > 0
            assert "üëã –ü—Ä–∏–≤–µ—Ç" in message

    def test_messages_contain_role_specific_commands(self):
        """–¢–µ—Å—Ç, —á—Ç–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —Å–æ–¥–µ—Ä–∂–∞—Ç –∫–æ–º–∞–Ω–¥—ã, —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è —Ä–æ–ª–∏"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–¥–º–∏–Ω—Å–∫–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
        admin_message = self.welcome_service.get_welcome_message(UserRole.ADMIN)
        assert "/ban" in admin_message or "/admin_stats" in admin_message

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥
        user_message = self.welcome_service.get_welcome_message(UserRole.USER)
        assert "/ban" not in user_message
        assert "/admin_stats" not in user_message


if __name__ == "__main__":
    pytest.main([__file__])