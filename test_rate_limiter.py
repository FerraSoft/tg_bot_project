#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ rate limiter.
–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è rate limiting.

–¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
- –ë–∞–∑–æ–≤–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ (3 –∑–∞–ø—Ä–æ—Å–∞ –∑–∞ 10 —Å–µ–∫—É–Ω–¥)
- –ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π)
- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (2 –∑–∞–ø—Ä–æ—Å–∞ –∑–∞ 10 —Å–µ–∫—É–Ω–¥)
- –ü–æ–¥—Å—á–µ—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤ (5 –¥–ª—è –Ω–æ–≤—ã—Ö, 4 –¥–ª—è –æ–±—ã—á–Ω—ã—Ö)
- –ú–µ—Ç–æ–¥ record_request —Å –≤—ã–±—Ä–æ—Å–æ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–π
- –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
- –ò—Å—Ç–µ—á–µ–Ω–∏–µ –æ–∫–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–æ–π

–í—Å–µ —Ç–µ—Å—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç sliding window –∞–ª–≥–æ—Ä–∏—Ç–º –∏ —É—á–∏—Ç—ã–≤–∞—é—Ç —Ä–∞–Ω–≥–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É.
"""

import asyncio
import time
import sys
import os
import io

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º UTF-8 –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ–¥–∑–∏
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from core.rate_limiter import RateLimiter, RateLimitExceeded
from core.permissions import UserRole


async def test_basic_rate_limiting():
    """–¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ rate limiting"""
    print("–¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ rate limiting...")

    # –°–æ–∑–¥–∞–µ–º rate limiter —Å –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –ª–∏–º–∏—Ç–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∞
    limiter = RateLimiter(window_size=10, max_requests=3)  # 3 –∑–∞–ø—Ä–æ—Å–∞ –∑–∞ 10 —Å–µ–∫—É–Ω–¥

    user_id = 12345

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ —Ç—Ä–∏ –∑–∞–ø—Ä–æ—Å–∞ (–¥–æ–ª–∂–Ω—ã –ø—Ä–æ–π—Ç–∏)
    for i in range(3):
        await limiter.record_request(user_id)
        print(f"‚úì –ó–∞–ø—Ä–æ—Å {i+1}: —Ä–∞–∑—Ä–µ—à–µ–Ω –∏ –∑–∞–ø–∏—Å–∞–Ω")

    # –ß–µ—Ç–≤–µ—Ä—Ç—ã–π –∑–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
    try:
        await limiter.record_request(user_id)
        assert False, "–ß–µ—Ç–≤–µ—Ä—Ç—ã–π –∑–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –≤—ã–∑–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ"
    except RateLimitExceeded as e:
        print(f"‚úì –ó–∞–ø—Ä–æ—Å 4: –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –∫–∞–∫ –∏ –æ–∂–∏–¥–∞–ª–æ—Å—å")

    print("‚úì –ë–∞–∑–æ–≤—ã–π rate limiting —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n")


async def test_admin_exemption():
    """–¢–µ—Å—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
    print("üß™ –¢–µ—Å—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤...")

    limiter = RateLimiter(window_size=10, max_requests=2)

    admin_user = 99999
    regular_user = 88888

    # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤
    for i in range(5):
        allowed, retry_after = await limiter.check_limit(admin_user, UserRole.ADMIN)
        assert allowed == True, f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å {i+1} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω"
        print(f"‚úÖ –ê–¥–º–∏–Ω –∑–∞–ø—Ä–æ—Å {i+1}: —Ä–∞–∑—Ä–µ—à–µ–Ω")

    # –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω - –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã
    await limiter.record_request(regular_user)
    await limiter.record_request(regular_user)

    # –¢—Ä–µ—Ç–∏–π –∑–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
    try:
        await limiter.record_request(regular_user)
        assert False, "–¢—Ä–µ—Ç–∏–π –∑–∞–ø—Ä–æ—Å –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –≤—ã–∑–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ"
    except RateLimitExceeded:
        print("‚úì –¢—Ä–µ—Ç–∏–π –∑–∞–ø—Ä–æ—Å –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")

    print("‚úÖ –ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n")


async def test_new_user_limits():
    """–¢–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("–¢–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")

    limiter = RateLimiter(window_size=10, max_requests=5, cleanup_interval=60)
    limiter.new_user_max_requests = 2  # –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: 2 –∑–∞–ø—Ä–æ—Å–∞

    new_user = 77777

    # –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è - –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–æ–≤—ã–º, –µ—Å–ª–∏ —É –Ω–µ–≥–æ –º–µ–Ω–µ–µ 10 –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ—ç—Ç–æ–º—É –ø–µ—Ä–≤—ã–µ 2 –∏–¥—É—Ç –ø–æ –ª–∏–º–∏—Ç—É –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (2)
    await limiter.record_request(new_user)
    await limiter.record_request(new_user)

    # –¢—Ä–µ—Ç–∏–π –∑–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (–ª–∏–º–∏—Ç 2 –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
    try:
        await limiter.record_request(new_user)
        assert False, "–¢—Ä–µ—Ç–∏–π –∑–∞–ø—Ä–æ—Å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –≤—ã–∑–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ"
    except RateLimitExceeded:
        print("‚úì –¢—Ä–µ—Ç–∏–π –∑–∞–ø—Ä–æ—Å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")

    print("‚úì –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n")


async def test_remaining_requests():
    """–¢–µ—Å—Ç –ø–æ–¥—Å—á–µ—Ç–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤"""
    print("–¢–µ—Å—Ç –ø–æ–¥—Å—á–µ—Ç–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤...")

    limiter = RateLimiter(window_size=10, max_requests=4)

    user_id = 55555

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –ª–∏–º–∏—Ç 4, –Ω–æ new_user_max_requests=5)
    remaining = limiter.get_remaining_requests(user_id)
    assert remaining == 5, f"–î–æ–ª–∂–Ω–æ –±—ã—Ç—å 5 –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–∞, –ø–æ–ª—É—á–µ–Ω–æ {remaining}"

    # –î–µ–ª–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤
    for i in range(3):
        await limiter.record_request(user_id)
        remaining = limiter.get_remaining_requests(user_id)
        expected = 5 - (i + 1)  # –ù–∞—á–∏–Ω–∞–µ–º —Å 5, –º–∏–Ω—É—Å —Å–¥–µ–ª–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
        assert remaining == expected, f"–ü–æ—Å–ª–µ {i+1} –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞—Ç—å—Å—è {expected}, –ø–æ–ª—É—á–µ–Ω–æ {remaining}"

    print("‚úì –ü–æ–¥—Å—á–µ—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n")


async def test_record_request():
    """–¢–µ—Å—Ç –º–µ—Ç–æ–¥–∞ record_request"""
    print("üß™ –¢–µ—Å—Ç –º–µ—Ç–æ–¥–∞ record_request...")

    limiter = RateLimiter(window_size=10, max_requests=2)

    user_id = 44444

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–≤—ã–µ –¥–≤–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ—Ö–æ–¥—è—Ç
    await limiter.record_request(user_id)
    await limiter.record_request(user_id)

    # –¢—Ä–µ—Ç–∏–π –¥–æ–ª–∂–µ–Ω –≤—ã–∑–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
    try:
        await limiter.record_request(user_id)
        assert False, "–¢—Ä–µ—Ç–∏–π –∑–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –≤—ã–∑–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ"
    except RateLimitExceeded as e:
        print(f"‚úÖ –ò—Å–∫–ª—é—á–µ–Ω–∏–µ RateLimitExceeded –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤—ã–∑–≤–∞–Ω–æ: {e}")

    print("‚úÖ –ú–µ—Ç–æ–¥ record_request —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n")


async def test_stats():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    print("–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")

    limiter = RateLimiter(window_size=10, max_requests=3)

    # –î–µ–ª–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await limiter.record_request(11111)
    await limiter.record_request(22222)
    await limiter.record_request(11111)
    await limiter.record_request(33333)

    stats = limiter.get_stats()

    assert stats['total_users_tracked'] == 3, f"–î–æ–ª–∂–Ω–æ –±—ã—Ç—å 3 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–ª—É—á–µ–Ω–æ {stats['total_users_tracked']}"
    assert stats['total_requests_in_window'] == 4, f"–î–æ–ª–∂–Ω–æ –±—ã—Ç—å 4 –∑–∞–ø—Ä–æ—Å–∞, –ø–æ–ª—É—á–µ–Ω–æ {stats['total_requests_in_window']}"
    assert stats['window_size_seconds'] == 10, f"–†–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 10 —Å–µ–∫, –ø–æ–ª—É—á–µ–Ω–æ {stats['window_size_seconds']}"
    assert stats['default_max_requests'] == 3, f"–ú–∞–∫—Å –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 3, –ø–æ–ª—É—á–µ–Ω–æ {stats['default_max_requests']}"

    print("‚úì –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n")


async def test_window_expiration():
    """–¢–µ—Å—Ç –∏—Å—Ç–µ—á–µ–Ω–∏—è –æ–∫–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏"""
    print("üß™ –¢–µ—Å—Ç –∏—Å—Ç–µ—á–µ–Ω–∏—è –æ–∫–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏...")

    limiter = RateLimiter(window_size=5, max_requests=2)  # 5 —Å–µ–∫—É–Ω–¥ –æ–∫–Ω–æ

    user_id = 66666

    # –î–µ–ª–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ (check_limit –Ω–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç, –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å record_request)
    await limiter.record_request(user_id)
    await limiter.record_request(user_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
    allowed, retry_after = await limiter.check_limit(user_id)
    assert not allowed, "–ó–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"

    # –ñ–¥–µ–º –∏—Å—Ç–µ—á–µ–Ω–∏—è –æ–∫–Ω–∞
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è –æ–∫–Ω–∞ (5 —Å–µ–∫—É–Ω–¥)...")
    await asyncio.sleep(6)

    # –¢–µ–ø–µ—Ä—å –∑–∞–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã —Å–Ω–æ–≤–∞ —Ä–∞–∑—Ä–µ—à–∞—Ç—å—Å—è
    allowed, retry_after = await limiter.check_limit(user_id)
    assert allowed, "–ü–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è –æ–∫–Ω–∞ –∑–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω"

    print("‚úÖ –ò—Å—Ç–µ—á–µ–Ω–∏–µ –æ–∫–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n")


async def run_all_tests():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ rate limiter...\n")

    try:
        await test_basic_rate_limiting()
        await test_admin_exemption()
        await test_new_user_limits()
        await test_remaining_requests()
        await test_record_request()
        await test_stats()
        await test_window_expiration()

        print("–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("‚úì –ë–∞–∑–æ–≤—ã–π rate limiting")
        print("‚úì –ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
        print("‚úì –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("‚úì –ü–æ–¥—Å—á–µ—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤")
        print("‚úì –ú–µ—Ç–æ–¥ record_request")
        print("‚úì –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
        print("‚úì –ò—Å—Ç–µ—á–µ–Ω–∏–µ –æ–∫–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏")

        return True

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False


if __name__ == "__main__":
    success = asyncio.run(run_all_tests())
    sys.exit(0 if success else 1)