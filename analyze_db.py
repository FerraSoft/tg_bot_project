import sqlite3

def analyze_database():
    """–ê–Ω–∞–ª–∏–∑ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = sqlite3.connect('telegram_bot.db')
        cursor = conn.cursor()

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = cursor.fetchall()

        print("=== –ê–ù–ê–õ–ò–ó –°–•–ï–ú–´ –ë–ê–ó–´ –î–ê–ù–ù–´–• ===")
        print(f"–ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")

        for table in tables:
            table_name = table[0]
            print(f"\n–¢–ê–ë–õ–ò–¶–ê: {table_name}")

            # –ü–æ–ª—É—á–∞–µ–º —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü—ã
            cursor.execute(f"PRAGMA table_info({table_name})")
            columns = cursor.fetchall()

            print("–ö–æ–ª–æ–Ω–∫–∏:")
            for col in columns:
                col_id, col_name, col_type, not_null, default_val, is_pk = col
                pk_str = " (PRIMARY KEY)" if is_pk else ""
                not_null_str = " NOT NULL" if not_null else ""
                default_str = f" DEFAULT {default_val}" if default_val else ""
                print(f"  - {col_name} ({col_type}){not_null_str}{default_str}{pk_str}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Ç–∞–±–ª–∏—Ü—É users
        print("\nüîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –¢–ê–ë–õ–ò–¶–´ USERS:")
        cursor.execute("PRAGMA table_info(users)")
        users_columns = cursor.fetchall()

        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫ –≤ users: {len(users_columns)}")
        for col in users_columns:
            col_id, col_name, col_type, not_null, default_val, is_pk = col
            print(f"  {col_id}: {col_name} ({col_type})")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ telegram_id
        has_telegram_id = any(col[1] == 'telegram_id' for col in users_columns)
        print(f"\n‚ùì –ï—Å—Ç—å –∫–æ–ª–æ–Ω–∫–∞ telegram_id: {'–î–ê' if has_telegram_id else '–ù–ï–¢'}")

        conn.close()
        return True

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

if __name__ == "__main__":
    analyze_database()