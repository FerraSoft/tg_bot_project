#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ —Å–≤—è–∑–∫–µ.
"""

import asyncio
import sys
import os

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ UTF-8 –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∏ —ç–º–æ–¥–∑–∏
sys.stdout.reconfigure(encoding='utf-8')
sys.stderr.reconfigure(encoding='utf-8')

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))


async def test_full_integration():
    """–ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã"""
    print('=== –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ù–û–í–û–ô –ê–†–•–ò–¢–ï–ö–¢–£–†–´ ===')
    print()

    try:
        # === –®–ê–ì 1: –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ ===
        print('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...')

        from core.menu_manager import create_menu_manager
        from core.message_router import create_message_router
        from core.unified_router import create_unified_router
        from core.command_router import create_command_router
        from utils.formatters import KeyboardFormatter
        from core.permissions import permission_manager, UserRole

        print('‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã')

        # === –®–ê–ì 2: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ ===
        print('2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã...')

        formatter = KeyboardFormatter()
        menu_manager = create_menu_manager(permission_manager, formatter)
        message_router = create_message_router()
        command_router = create_command_router(None, None)
        unified_router = create_unified_router(command_router, message_router, menu_manager)

        print('‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã')

        # === –®–ê–ì 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω—é ===
        print('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω—é...')

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ–Ω—é –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π
        user_menus = menu_manager.get_available_menus_for_role(UserRole.USER)
        admin_menus = menu_manager.get_available_menus_for_role(UserRole.ADMIN)
        super_admin_menus = menu_manager.get_available_menus_for_role(UserRole.SUPER_ADMIN)

        print(f'   –ú–µ–Ω—é –¥–ª—è USER: {len(user_menus)}')
        print(f'   –ú–µ–Ω—é –¥–ª—è ADMIN: {len(admin_menus)}')
        print(f'   –ú–µ–Ω—é –¥–ª—è SUPER_ADMIN: {len(super_admin_menus)}')

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–µ–≤—ã—Ö –º–µ–Ω—é
        assert 'menu_main' in user_menus, 'menu_main –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è USER'
        assert 'menu_admin' in admin_menus, 'menu_admin –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è ADMIN'
        assert 'admin_system' in super_admin_menus, 'admin_system –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è SUPER_ADMIN'

        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é
        main_menu = await menu_manager.get_menu_for_user('menu_main', UserRole.USER)
        assert main_menu is not None, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω–æ'
        assert hasattr(main_menu, 'inline_keyboard'), '–ú–µ–Ω—é –¥–æ–ª–∂–Ω–æ –∏–º–µ—Ç—å inline_keyboard'

        admin_menu = await menu_manager.get_menu_for_user('menu_admin', UserRole.ADMIN)
        assert admin_menu is not None, '–ê–¥–º–∏–Ω –º–µ–Ω—é –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω–æ'

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫–∞–∑–∞ –≤ –¥–æ—Å—Ç—É–ø–µ
        forbidden_menu = await menu_manager.get_menu_for_user('menu_admin', UserRole.USER)
        assert forbidden_menu is None, 'USER –Ω–µ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø –∫ admin –º–µ–Ω—é'

        print('‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–µ–Ω—é —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')

        # === –®–ê–ì 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π ===
        print('4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π...')

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        call_count = {'text': 0, 'callback': 0, 'voice': 0}

        async def test_text_handler(update, context):
            call_count['text'] += 1
            print('   üìù –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∑–≤–∞–Ω')

        async def test_callback_handler(update, context):
            call_count['callback'] += 1
            print('   üîò Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∑–≤–∞–Ω')

        async def test_voice_handler(update, context):
            call_count['voice'] += 1
            print('   üé§ –ì–æ–ª–æ—Å–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∑–≤–∞–Ω')

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        message_router.register_text_handler(r'hello.*', test_text_handler, UserRole.USER)
        message_router.register_callback_handler('test_', test_callback_handler, UserRole.USER)
        message_router.register_media_handler('voice', test_voice_handler, UserRole.USER)

        print('   ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã')

        # === –®–ê–ì 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ ===
        print('5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã...')

        stats = unified_router.get_registered_handlers_count()
        expected_total = 2 + 1 + 1  # command + callback + voice (text=1, –Ω–æ –º—ã –Ω–µ —Å—á–∏—Ç–∞–µ–º –µ–≥–æ –æ—Ç–¥–µ–ª—å–Ω–æ –≤ —Å—Ç–∞—Ä–æ–º —Ñ–æ—Ä–º–∞—Ç–µ)

        print(f'   –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {stats}')
        assert stats['total'] >= 3, f'–î–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 3 –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞, –ø–æ–ª—É—á–µ–Ω–æ {stats["total"]}'

        print('   ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞')

        # === –®–ê–ì 6: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Application ===
        print('6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Application...')

        from core.application import Application
        from core.config import Config

        # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±–ª–µ–≥—á–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ Application –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        config = Config()
        app = Application.__new__(Application)
        app.config = config

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–∏–º–∏—Ç–∞—Ü–∏—è _initialize_unified_router)
        app.command_router = create_command_router(config, None)
        app.message_router = create_message_router()
        app.menu_manager = create_menu_manager(permission_manager, KeyboardFormatter())

        from core.unified_router import create_unified_router
        app.unified_router = create_unified_router(
            app.command_router, app.message_router, app.menu_manager
        )

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        app._register_command_handlers()
        app._register_message_handlers()
        app._register_callback_handlers()

        app_stats = app.unified_router.get_registered_handlers_count()
        print(f'   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Application: {app_stats}')

        assert app_stats['command_handlers'] > 0, '–î–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–æ–º–∞–Ω–¥—ã'
        assert app_stats['total'] > 5, '–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å > 5'

        print('   ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Application —É—Å–ø–µ—à–Ω–∞')

        # === –®–ê–ì 7: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è ===
        print('7Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è...')

        # –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
        menu1 = await menu_manager.get_menu_for_user('menu_main', UserRole.USER)
        menu2 = await menu_manager.get_menu_for_user('menu_main', UserRole.USER)

        assert menu1 is not None and menu2 is not None, '–ú–µ–Ω—é –¥–æ–ª–∂–Ω—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è'
        # –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∫–µ—à –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç

        # –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞
        menu_manager.clear_cache()
        print('   ‚úÖ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç')

        # === –®–ê–ì 8: –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ ===
        print('8Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏...')

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–æ —É—Ä–æ–≤–Ω—è–º
        user_level_menus = menu_manager.get_menus_by_level('user')
        admin_level_menus = menu_manager.get_menus_by_level('admin')

        assert len(user_level_menus) > 0, '–î–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–µ–Ω—é —É—Ä–æ–≤–Ω—è user'
        assert len(admin_level_menus) > 0, '–î–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–µ–Ω—é —É—Ä–æ–≤–Ω—è admin'
        assert 'menu_main' in user_level_menus, 'menu_main –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ user level'
        assert 'menu_admin' in admin_level_menus, 'menu_admin –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ admin level'

        print('   ‚úÖ –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ —É—Ä–æ–≤–Ω—è–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')

        print()
        print('=== üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û! ===')
        print()
        print('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:')
        print(f'   ‚Ä¢ –ú–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(user_menus)}')
        print(f'   ‚Ä¢ –ú–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {len(admin_menus)}')
        print(f'   ‚Ä¢ –ú–µ–Ω—é –¥–ª—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {len(super_admin_menus)}')
        print(f'   ‚Ä¢ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {stats["total"]}')
        print(f'   ‚Ä¢ –ö–æ–º–∞–Ω–¥: {stats["command_handlers"]}')
        print(f'   ‚Ä¢ Callback\'–æ–≤: {stats["callback_handlers"]}')
        print()
        print('üèÜ –ù–û–í–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê –ì–û–¢–û–í–ê –ö –ü–†–û–ú–´–®–õ–ï–ù–ù–û–ú–£ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!')
        print()
        print('üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:')
        print('   1. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python -m pytest tests/test_core/ -v')
        print('   2. üìñ –ò–∑—É—á–∏—Ç–µ: MIGRATION_GUIDE.md')
        print('   3. üß™ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ staging —Å—Ä–µ–¥–µ')
        print('   4. üöÄ –ù–∞—á–Ω–∏—Ç–µ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é')
        print('   5. üìä –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å')

        return True

    except Exception as e:
        print(f'‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò: {e}')
        import traceback
        traceback.print_exc()
        return False


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = await test_full_integration()

    if success:
        print()
        print('=' * 60)
        print('‚úÖ –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û')
        print('‚úÖ –ù–û–í–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –ì–û–¢–û–í–ê –ö –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ')
        print('=' * 60)
        sys.exit(0)
    else:
        print()
        print('=' * 60)
        print('‚ùå –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–í–ê–õ–ï–ù–û')
        print('‚ùå –¢–†–ï–ë–£–ï–¢–°–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö')
        print('=' * 60)
        sys.exit(1)


if __name__ == '__main__':
    asyncio.run(main())