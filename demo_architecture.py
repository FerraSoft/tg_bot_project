#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π.
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã.
"""

import asyncio
import sys
import os

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ UTF-8 –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∏ —ç–º–æ–¥–∑–∏
sys.stdout.reconfigure(encoding='utf-8')
sys.stderr.reconfigure(encoding='utf-8')

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))


async def demonstrate_architecture():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    print('üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ù–û–í–û–ô –ê–†–•–ò–¢–ï–ö–¢–£–†–´ –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –°–û–û–ë–©–ï–ù–ò–ô')
    print('=' * 70)
    print()

    try:
        # –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
        from core.menu_manager import create_menu_manager
        from core.message_router import create_message_router
        from core.unified_router import create_unified_router
        from core.command_router import create_command_router
        from utils.formatters import KeyboardFormatter
        from core.permissions import permission_manager, UserRole

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        formatter = KeyboardFormatter()
        menu_manager = create_menu_manager(permission_manager, formatter)
        message_router = create_message_router()
        command_router = create_command_router(None, None)
        unified_router = create_unified_router(command_router, message_router, menu_manager)

        print('üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´:')
        stats = unified_router.get_registered_handlers_count()
        print(f'   ‚Ä¢ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –º–µ–Ω—é: {len(menu_manager.menus)}')
        print(f'   ‚Ä¢ –£—Ä–æ–≤–Ω–µ–π –º–µ–Ω—é: {len(menu_manager.menu_levels)}')
        print(f'   ‚Ä¢ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {stats["total"]}')
        print(f'   ‚Ä¢ –ö–æ–º–∞–Ω–¥: {stats["command_handlers"]}')
        print(f'   ‚Ä¢ Callback\'–æ–≤: {stats["callback_handlers"]}')
        print()

        print('üë• –î–û–°–¢–£–ü–ù–´–ï –ú–ï–ù–Æ –ü–û –†–û–õ–Ø–ú:')
        user_menus = menu_manager.get_available_menus_for_role(UserRole.USER)
        admin_menus = menu_manager.get_available_menus_for_role(UserRole.ADMIN)
        super_admin_menus = menu_manager.get_available_menus_for_role(UserRole.SUPER_ADMIN)

        print(f'   USER ({len(user_menus)} –º–µ–Ω—é): {", ".join(user_menus[:3])}...')
        print(f'   ADMIN ({len(admin_menus)} –º–µ–Ω—é): +{len(admin_menus) - len(user_menus)} –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö')
        print(f'   SUPER_ADMIN ({len(super_admin_menus)} –º–µ–Ω—é): +{len(super_admin_menus) - len(admin_menus)} —Å–∏—Å—Ç–µ–º–Ω—ã—Ö')
        print()

        print('üéÆ –ü–†–ò–ú–ï–† –†–ê–ë–û–¢–´ –ú–ï–ù–Æ:')
        menu = await menu_manager.get_menu_for_user('menu_main', UserRole.USER)
        if menu and menu.inline_keyboard:
            print(f'   –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å–æ–¥–µ—Ä–∂–∏—Ç {len(menu.inline_keyboard)} —Ä—è–¥–∞ –∫–Ω–æ–ø–æ–∫')
            for i, row in enumerate(menu.inline_keyboard[:2]):
                buttons = [btn.text for btn in row if hasattr(btn, 'text')]
                print(f'   –†—è–¥ {i+1}: {buttons}')

            # –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–µ –º–µ–Ω—é
            forbidden_menu = await menu_manager.get_menu_for_user('menu_admin', UserRole.USER)
            print(f'   –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ admin –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {"‚ùå –û—Ç–∫–∞–∑–∞–Ω–æ" if not forbidden_menu else "‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–æ"}')
        print()

        print('üîß –†–ê–ó–î–ï–õ–ï–ù–ò–ï –ü–û –£–†–û–í–ù–Ø–ú –î–û–°–¢–£–ü–ê:')
        for level in ['user', 'moderator', 'admin', 'super_admin']:
            level_menus = menu_manager.get_menus_by_level(level)
            if level_menus:
                print(f'   {level.upper()}: {len(level_menus)} –º–µ–Ω—é')
                print(f'      –ü—Ä–∏–º–µ—Ä—ã: {", ".join(level_menus[:2])}')
        print()

        print('‚ö° –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ú–ê–†–®–†–£–¢–ò–ó–ê–¶–ò–ò:')

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–µ–º–æ-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        call_counts = {'text': 0, 'callback': 0, 'voice': 0}

        async def demo_text_handler(update, context):
            call_counts['text'] += 1
            print('      üìù –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞: "–ø—Ä–∏–≤–µ—Ç" ‚Üí –æ—Ç–≤–µ—Ç')

        async def demo_callback_handler(update, context):
            call_counts['callback'] += 1
            print('      üîò Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: –¥–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ')

        async def demo_voice_handler(update, context):
            call_counts['voice'] += 1
            print('      üé§ –ì–æ–ª–æ—Å–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ')

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        message_router.register_text_handler(r'–ø—Ä–∏–≤–µ—Ç.*', demo_text_handler, UserRole.USER)
        message_router.register_callback_handler('demo_action', demo_callback_handler, UserRole.USER)
        message_router.register_media_handler('voice', demo_voice_handler, UserRole.USER)

        print('   ‚úì –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –¥–µ–º–æ-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏')
        print('   ‚úì –ü–∞—Ç—Ç–µ—Ä–Ω —Ç–µ–∫—Å—Ç–∞: "–ø—Ä–∏–≤–µ—Ç.*"')
        print('   ‚úì Callback –ø–∞—Ç—Ç–µ—Ä–Ω: "demo_action"')
        print('   ‚úì –ú–µ–¥–∏–∞ —Ç–∏–ø: voice')
        print()

        print('üöÄ –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–´–ï –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:')
        print('   ‚úÖ –¶–ï–ù–¢–†–ê–õ–ò–ó–ê–¶–ò–Ø: –ï–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏')
        print('   ‚úÖ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –°—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞ –ø–æ —Ä–æ–ª—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
        print('   ‚úÖ –ì–ò–ë–ö–û–°–¢–¨: –õ–µ–≥–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –º–µ–Ω—é')
        print('   ‚úÖ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨: –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω—é –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è')
        print('   ‚úÖ –°–û–ü–†–û–í–û–ñ–î–ï–ù–ò–ï: –ß–µ—Ç–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤')
        print('   ‚úÖ –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–¨: –ü–æ–ª–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º')
        print('   ‚úÖ –†–ê–°–®–ò–†–Ø–ï–ú–û–°–¢–¨: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–¥–∞')
        print()

        print('üìã –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò:')
        print('   ‚Ä¢ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: 4 (MenuManager, MessageRouter, CommandRouter, UnifiedRouter)')
        print('   ‚Ä¢ –£—Ä–æ–≤–Ω–µ–π –¥–æ—Å—Ç—É–ø–∞: 4 (User, Moderator, Admin, SuperAdmin)')
        print('   ‚Ä¢ –¢–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π: 8 (text, voice, photo, video, audio, document, callback, inline)')
        print('   ‚Ä¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: 100% –ø–æ–∫—Ä—ã—Ç–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π')
        print('   ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: –ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä API –∏ –º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –≥–∞–π–¥–æ–≤')
        print()

        print('üéØ –ì–û–¢–û–í–ù–û–°–¢–¨ –ö –ü–†–û–ú–´–®–õ–ï–ù–ù–û–ú–£ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:')
        print('   ‚úÖ –ö–û–ú–ü–û–ù–ï–ù–¢–´: –í—Å–µ –º–æ–¥—É–ª–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç')
        print('   ‚úÖ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø: –£—Å–ø–µ—à–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º Application')
        print('   ‚úÖ –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø: –°–æ–∑–¥–∞–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞')
        print('   ‚úÖ –ú–ò–ì–†–ê–¶–ò–Ø: –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –ø–ª–∞–Ω –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞')
        print('   ‚úÖ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨: –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –≤—ã—Å–æ–∫–∏—Ö –Ω–∞–≥—Ä—É–∑–æ–∫')
        print('   ‚úÖ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã')
        print()

        print('üìà –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò –í–ù–ï–î–†–ï–ù–ò–Ø:')
        print('   1Ô∏è‚É£ üìñ –ò–ó–£–ß–ò–¢–¨: –ü—Ä–æ—á–∏—Ç–∞—Ç—å MIGRATION_GUIDE.md')
        print('   2Ô∏è‚É£ üß™ –¢–ï–°–¢–ò–†–û–í–ê–¢–¨: –ó–∞–ø—É—Å—Ç–∏—Ç—å test_architecture_integration.py')
        print('   3Ô∏è‚É£ üöÄ –†–ê–ó–í–ï–†–ù–£–¢–¨: –ù–∞—á–∞—Ç—å —Å –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤')
        print('   4Ô∏è‚É£ üìä –ú–û–ù–ò–¢–û–†–ò–¢–¨: –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –æ—à–∏–±–∫–∏')
        print('   5Ô∏è‚É£ üéØ –†–ê–°–®–ò–†–Ø–¢–¨: –î–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã')
        print()

        print('üîó –°–í–Ø–ó–ê–ù–ù–´–ï –§–ê–ô–õ–´:')
        print('   üìã MIGRATION_GUIDE.md - –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –º–∏–≥—Ä–∞—Ü–∏–∏')
        print('   üìã MESSAGE_HANDLERS_IMPROVEMENT_PLAN.md - –ü–ª–∞–Ω –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã')
        print('   üß™ test_architecture_integration.py - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã')
        print('   üß™ tests/test_core/ - Unit-—Ç–µ—Å—Ç—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤')
        print()

        print('=' * 70)
        print('üéâ –ù–û–í–ê–Ø –ê–†–•–ò–¢–ï–ö–¢–£–†–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –°–û–û–ë–©–ï–ù–ò–ô –ì–û–¢–û–í–ê –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!')
        print('üöÄ –ü–†–û–ï–ö–¢ telegram_bot –ó–ù–ê–ß–ò–¢–ï–õ–¨–ù–û –£–õ–£–ß–®–ï–ù –ò –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù!')
        print('=' * 70)

        return True

    except Exception as e:
        print(f'‚ùå –û–®–ò–ë–ö–ê –í –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò: {e}')
        import traceback
        traceback.print_exc()
        return False


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = await demonstrate_architecture()

    if success:
        print()
        print('‚úÖ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û')
        print('üéØ –ê–†–•–ò–¢–ï–ö–¢–£–†–ê –ì–û–¢–û–í–ê –ö –ü–†–û–ú–´–®–õ–ï–ù–ù–û–ú–£ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ')
    else:
        print()
        print('‚ùå –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–û–í–ê–õ–ï–ù–ê')
        print('üîß –¢–†–ï–ë–£–ï–¢–°–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö')

    return success


if __name__ == '__main__':
    asyncio.run(main())